--@name Stagger fire
--@author Letsi & Redox
--@server

local rateoffire = 400

local count = 1
local currentShot = 1
local shooting = false

local data = getUserdata() or 1
data = tonumber( data )
if not data then data = 1 end
local names, types = {"Fire"}, {"Number"}

for i = 1, data do
    table.insert( names, "Entity" .. i )
    table.insert( types, "Entity" )
end
count = data

wire.adjustInputs( names, types )

local fireInput = chip():getWirelink()

local function staggerFire()
    local wirelink = wire.ports["Entity" .. currentShot]:getWirelink()
    if not isValid( wirelink ) then return end

    wirelink["Fire"] = 1
    currentShot = currentShot + 1

    if currentShot == count then
        currentShot = 1
    end
    timer.simple( 0, function() wirelink["Fire"] = 0 end )
end

local function addInputs( name, value )
    if name == "Fire" then
        if value > 0.1 then
            shooting = true
        else
            shooting = false
        end
        return
    end

    if not isValid( value ) then return end
    if name ~= "Entity" .. count then return end
    
    count = count + 1
    
    table.insert( names, "Entity" .. count )
    table.insert( types, "Entity" )
    
    wire.adjustInputs( names, types )
    setUserdata( tostring( count - 1 ) )
end

hook.add( "Input", "AddInputs", addInputs )

local function thinkCheck()
    if shooting then
        staggerFire()
    end
end

timer.create( "RoFcheck",  ( 1 / ( rateoffire / 60 ) ) / count, 0, thinkCheck ) 
